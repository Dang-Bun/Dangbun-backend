spring:
  application:
    name: dangbun
  profiles:
    group:
      local: db-local, port-local, common
      prod: db-prod, port-prod, common
#    active: local
---

# ?? DB
spring:
  jackson:
    time-zone: Asia/Seoul
  config:
    activate:
      on-profile: db-local

  datasource:
    url: ${LOCAL_DB_URL:jdbc:mysql://localhost:3306/dangbun}
    username: ${LOCAL_DB_USER}
    password: ${LOCAL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver

  data:
    redis:
      host: localhost
      port: 6379

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect
logging:
  level:
    org.springframework.security: DEBUG
---

#prod DB
spring:
  config:
    activate:
      on-profile: db-prod
  datasource:
    url: ${PROD_DB_URL}
    username: ${PROD_DB_USER}
    password: ${PROD_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  data:
    redis:
      port: 6379
      host: redis
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.MySQLDialect



---
spring:
  config:
    activate:
      on-profile: port-prod

server:
  port: 8080
  servlet:
    context-path: /

---
spring:
  config:
    activate:
      on-profile: common
  mail:
    host: smtp.gmail.com
    port: 587
    username: kuitdangbun@gmail.com
    password: ${MAIL_PASSWORD}
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
          connectiontimeout: 5000
          timeout: 5000
          writetimeout: 5000
          ssl:
            enable: true
    auth-code-expiration-millis: 180000
  cloud:
    aws:
      credentials:
        access-key: ${AWS_IAM_ACCESS_KEY}
        secret-key: ${AWS_IAM_SECRET_KEY}
      region:
        static: ap-northeast-2
      s3:
        bucket: ${AWS_S3_BUCKET_NAME}
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB




jwt:
  secret: ${JWT_SECRET}

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always

